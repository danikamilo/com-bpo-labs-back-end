services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - ticketing-network

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,INTERNAL://kafka:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.1.30:9092,INTERNAL://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - ticketing-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "5058:8080"
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - ticketing-network

  mongo:
    image: mongo:latest
    container_name: mongo-ticketmaster
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: bpo
      MONGO_INITDB_ROOT_PASSWORD: labs.123
      MONGO_INITDB_DATABASE: db_ticketmaster
    volumes:
      - mongo_data:/data/db
    networks:
      - ticketing-network

  event-service:
    build:
      context: ./event-service
      dockerfile: Dockerfile
    container_name: event-service
    ports:
      - "5051:5050"
    depends_on:
      - mongo
    networks:
      - ticketing-network

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "5059:5050"
    depends_on:
      - mongo
    networks:
      - ticketing-network

  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    ports:
      - "5056:5050"
    depends_on:
      - mongo
    networks:
      - ticketing-network

  payment-service:
    build:
      context: ./payment-service
      dockerfile: Dockerfile
    ports:
      - "5057:5050"
    depends_on:
      - mongo
    networks:
      - ticketing-network

  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    ports:
      - "5055:5050"
    depends_on:
      - mongo
    networks:
      - ticketing-network

  inventory-service:
    build:
      context: ./inventory-service
      dockerfile: Dockerfile
    ports:
      - "5054:5050"
    depends_on:
      - mongo
    networks:
      - ticketing-network

  nginx-gateway:
    build:
      context: ./nginx-gateway
      dockerfile: Dockerfile
    container_name: nginx-gateway
    ports:
      - "5050:80"
    depends_on:
      - event-service
      - user-service
      - order-service
      - inventory-service
      - payment-service
      - notification-service
    networks:
      - ticketing-network

volumes:
  mongo_data:

networks:
  ticketing-network:
    driver: bridge
    name: ticketing-network