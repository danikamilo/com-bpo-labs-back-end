#quarkus.http.host=0.0.0.0
quarkus.devservices.enabled=false
quarkus.profile=default
quarkus.log.handler.console.enabled=false
quarkus.log.handler.file.enabled=false

auto.create.topics.enable=true
kafka.bootstrap.servers=192.168.1.30:9092

# === Producer: order-events ===
mp.messaging.outgoing.order-events-out.connector=smallrye-kafka
mp.messaging.outgoing.order-events-out.topic=order-events
mp.messaging.outgoing.order-events-out.bootstrap.servers=${kafka.bootstrap.servers}
mp.messaging.outgoing.order-events-out.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.order-events-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer

# === Producer: payment-events ===
mp.messaging.outgoing.payment-events-out.connector=smallrye-kafka
mp.messaging.outgoing.payment-events-out.topic=payment-events
mp.messaging.outgoing.payment-events-out.bootstrap.servers=${kafka.bootstrap.servers}
mp.messaging.outgoing.payment-events-out.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.payment-events-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer

# === Producer: payment-failed-events ===
mp.messaging.outgoing.payment-failed-events-out.connector=smallrye-kafka
mp.messaging.outgoing.payment-failed-events-out.topic=payment-failed-events
mp.messaging.outgoing.payment-failed-events-out.bootstrap.servers=${kafka.bootstrap.servers}
mp.messaging.outgoing.payment-failed-events-out.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.payment-failed-events-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer

# === Producer: notification-events ===
mp.messaging.outgoing.notification-events-out.connector=smallrye-kafka
mp.messaging.outgoing.notification-events-out.topic=notification-events
mp.messaging.outgoing.notification-events-out.bootstrap.servers=${kafka.bootstrap.servers}
mp.messaging.outgoing.notification-events-out.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.notification-events-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer

# === Producer: notification-payment-failed-events ===
mp.messaging.outgoing.notification-payment-failed-events-out.connector=smallrye-kafka
mp.messaging.outgoing.notification-payment-failed-events-out.topic=notification-payment-failed-events
mp.messaging.outgoing.notification-payment-failed-events-out.bootstrap.servers=${kafka.bootstrap.servers}
mp.messaging.outgoing.notification-payment-failed-events-out.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.notification-payment-failed-events-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer

# === Consumer: order-events ===
mp.messaging.incoming.order-events-in.connector=smallrye-kafka
mp.messaging.incoming.order-events-in.topic=order-events
mp.messaging.incoming.order-events-in.group.id=order-consumer-group
mp.messaging.incoming.order-events-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.order-events-in.auto.offset.reset=earliest
mp.messaging.incoming.order-events-in.bootstrap.servers=${kafka.bootstrap.servers}

# === Consumer: payment-events ===
mp.messaging.incoming.payment-events-in.connector=smallrye-kafka
mp.messaging.incoming.payment-events-in.topic=payment-events
mp.messaging.incoming.payment-events-in.group.id=payment-consumer-group
mp.messaging.incoming.payment-events-in.bootstrap.servers=${kafka.bootstrap.servers}
mp.messaging.incoming.payment-events-in.auto.offset.reset=earliest
mp.messaging.incoming.payment-events-in.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.payment-events-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

# === Consumer: payment-failed-events ===
mp.messaging.incoming.payment-failed-events-in.connector=smallrye-kafka
mp.messaging.incoming.payment-failed-events-in.topic=payment-failed-events
mp.messaging.incoming.payment-failed-events-in.group.id=payment-failed-consumer-group
mp.messaging.incoming.payment-failed-events-in.bootstrap.servers=${kafka.bootstrap.servers}
mp.messaging.incoming.payment-failed-events-in.auto.offset.reset=earliest
mp.messaging.incoming.payment-failed-events-in.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.payment-failed-events-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

# === Consumer: notification-events ===
mp.messaging.incoming.notification-events-in.connector=smallrye-kafka
mp.messaging.incoming.notification-events-in.topic=notification-events
mp.messaging.incoming.notification-events-in.group.id=notification-consumer-group
mp.messaging.incoming.notification-events-in.bootstrap.servers=${kafka.bootstrap.servers}
mp.messaging.incoming.notification-events-in.auto.offset.reset=earliest
mp.messaging.incoming.notification-events-in.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.notification-events-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

# === Consumer: notification-payment-failed-events ===
mp.messaging.incoming.notification-payment-failed-events-in.connector=smallrye-kafka
mp.messaging.incoming.notification-payment-failed-events-in.topic=notification-payment-failed-events
mp.messaging.incoming.notification-payment-failed-events-in.group.id=notification-failed-consumer-group
mp.messaging.incoming.notification-payment-failed-events-in.bootstrap.servers=${kafka.bootstrap.servers}
mp.messaging.incoming.notification-payment-failed-events-in.auto.offset.reset=earliest
mp.messaging.incoming.notification-payment-failed-events-in.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.notification-payment-failed-events-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

